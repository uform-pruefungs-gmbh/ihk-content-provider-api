# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy openapi defs using Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["release"]
    paths:
      - '**.md'
      - '**.sh'
      - '**.yml'
      - '**.yaml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pre-requisites
        run: |
          sudo npm install -g @redocly/cli
          sudo snap install yq
        shell: bash
      - name: Copy README to docs
        shell: bash
        run: |
          sudo cp ${{ github.workspace }}/README.md ${{ github.workspace }}/docs/README.md
      - name: Generate SPI- and API-Docs into docs dir
        shell: bash
        run: |
          sudo npx @redocly/cli build-docs ${{ github.workspace }}/api-definitions/src/main/resources/openapi/ihk-content-provider-api.yaml -o ${{ github.workspace }}/docs/api.html
          sudo npx @redocly/cli build-docs ${{ github.workspace }}/api-definitions/src/main/resources/openapi/ihk-content-provider-spi.yaml -o ${{ github.workspace }}/docs/spi.html
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
