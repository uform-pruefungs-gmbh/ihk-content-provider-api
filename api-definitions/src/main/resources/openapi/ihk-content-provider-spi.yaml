openapi: "3.0.3"
info:
  title: SPI IHK content provider for examination
  description: This is an examination API for IHK content service provider.
  version: "1.0"
  license:
    name: "Apache-2.0"
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
  - url: https://api.pruefung.io/spi

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 13
        message:
          type: string
          example: "This or that went wrong"

    OneTimePassword:
      type: object
      required:
        - otp_id
        - otp_type
        - subject_id
        - duration
        - otpstatus
      properties:
        otp_id:
          type: string
          example: "4g7a07i54"
          description: Unique identifier used as a one-time password or link
        otp_type:
          type: string
          enum: [tan, link]
          description: Type of the one-time password. TODO - discuss, if link is needed. Makes problems
        content_id:
          type: string
          example: "123456789012345678"
          description: Identifier for the examination content
        subject_id:
          type: string
          example: "876543210987654321"
          description: Identifier for the subject or user to which the OTP is issued
        duration:
          type: string
          format: duration
          example: "PT15M" # ISO 8601 duration format
          description: Duration time in ISO 8601 duration format this participation has during execution
        additionaltime:
          type: string
          format: duration
          example: "PT15M" # ISO 8601 duration format
          default: "PT0S"
          description: Optional additional time in ISO 8601 duration format this participation has during execution
        otpstatus:
          $ref: "#/components/schemas/OtpStatusType"
          description: Current status of the examination associated with this OTP
        expiration:
          type: string
          format: date-time
        participation_id:
          type: string
          example: "participation-1234567890"
          description: Optional identifier for the participation, if applicable.

    Participation:
      type: object
      required:
        - participation_id
        - content_id
        - subject_id
      properties:
        participation_id:
          type: string
          example: "participation-1234567890"
          description: Unique identifier for the user's participation in the examination process
        name:
          type: string
          example: "Zwischenprüfung Herbst 2026 - Fachinformatiker Anwendungsentwicklung"
          description: Name of the participation

    Participant:
      type: object
      required:
        - subject_id
        - participation_id
      properties:
        subject_id:
          type: string
          example: "876543210987654321"
          description: Identifier for the subject or user participating in the examination
        firstname:
          type: string
          example: "Max"
          description: First name of the participant
        lastname:
          type: string
          example: "Mustermann"
          description: Last name of the participant
        ihknumber:
          type: string
          example: "1234567890"
          description: IHK number of the participant

    OtpStatus:
      type: object
      required:
        - otp_id
        - status
      properties:
        otp_id:
          type: string
        status:
          type: string
          $ref: "#/components/schemas/OtpStatusType"
        last_updated:
          type: string
          format: date-time

    OtpStatusType:
      type: string
      enum:
        [
          created,
          runnable,
          running,
          suspended,
          finished,
          aborted,
          archived,
          other,
        ]
      description:
        "Current status of the examination associated with this OTP. The status can be one of the following:
        - created: The examination has been created but not yet started.
        - runnable: The examination is ready to be started.
        - running: The examination is currently in progress.
        - suspended: The examination has been temporarily paused.
        - finished: The examination has been completed successfully.
        - aborted: The examination was aborted before completion.
        - archived: The examination has been archived and is no longer active.
        - other: Any other status that does not fit the above categories."

    OtpRequestItem:
      type: object
      required:
        - content_id
        - subject_id
      properties:
        content_id:
          type: string
          description: Identifier for the examination content
          example: "123456789012345678"
        subject_id:
          type: string
          description: Identifier for the subject or user to which the OTP is issued
          example: "876543210987654321"
        additionaltime:
          type: string
          format: duration
          example: "PT15M" # ISO 8601 duration format
          default: "PT0S"
          description: Optional additional time in ISO 8601 duration format this participation has during execution
        participation:
          $ref: "#/components/schemas/Participation"
        participant:
          $ref: "#/components/schemas/Participant"

    AddTimeRequest:
      type: object
      required:
        - otp_id
        - additionaltime
      properties:
        otp_id:
          type: string
          description: Unique identifier for the one-time password
          example: "4g7a07i54"
        additionaltime:
          type: string
          format: duration
          example: "PT15M" # ISO 8601 duration format
          description: Additional time to add to the examination in ISO 8601 duration format
        reason:
          type: string
          description: Reason for adding additional time
          example: "Störung durch fehlerhaften Feueralarm während der Prüfung"

    # Streaming date definitions
    MonitoringStream:
      oneOf:
        - $ref: "#/components/schemas/HeartbeatEvent"
        - $ref: "#/components/schemas/MonitoringEvent"
        - $ref: "#/components/schemas/ErrorEvent"
      discriminator:
        propertyName: event
        mapping:
          ping: "#/components/schemas/HeartbeatEvent"
          error: "#/components/schemas/ErrorEvent"
          status_change: "#/components/schemas/MonitoringEvent"

    HeartbeatEvent:
      description: A server-sent event indicating that the server is still processing the request
      type: object
      required: [event]
      properties:
        event:
          type: string
          enum: ["ping"]
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the heartbeat

    MonitoringEvent:
      type: object
      required: [event, content_id, otp_id]
      properties:
        event:
          type: string
          description: Type of the event
          example: "status_change"
        monitoring_id:
          type: string
          format: uuid
          description: Unique identifier for the monitoring event
          example: "123e4567-e89b-12d3-a456-426614174000"
        subscription_id:
          type: string
          format: uuid
          description: Unique identifier for the subscription
          example: "123e4567-e89b-12d3-a456-426614174001"
        provider_id:
          type: string
          format: uuid
          description: Unique identifier for the content provider
          example: "123e4567-e89b-12d3-a456-426614174002"
        otp_id:
          type: string
          description: Unique identifier for the one-time password
          example: "4g7a07i54"
        otp_state:
          type: string
          $ref: "#/components/schemas/OtpStatusType"
          description: Current status of the examination associated with this OTP
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the event
        total_questions:
          type: integer
          description: Total number of questions in the examination
          example: 50
        done_questions:
          type: integer
          description: Number of questions completed by the participant
          example: 25
        remaintime:
          type: string
          format: duration
          description: Remaining time for the examination in ISO 8601 duration format
          example: "PT30M" # 30 minutes remaining
        endtime:
          type: string
          format: date-time
          description: expected endtime of the examination
          example: "2026-10-01T12:00:00Z"
        locked:
          type: boolean
          description: Indicates whether the examination is locked or not
          example: false
        additionaltime:
          type: string
          format: duration
          description: Additional time added to the examination in ISO 8601 duration format
          example: "PT15M" # 15 minutes additional time
        browser_left:
          type: boolean
          description: Indicates whether the participant has left the browser or not
          example: false

    ExecutionEntry:
      type: object
      required:
        - entry_id
        - otp_id
        - timestamp
        - type
      properties:
        entry_id:
          type: string
          description: Unique identifier for the entry
          example: "entry-001"
        otp_id:
          type: string
          description: OTP ID associated with the entry
          example: "4g7a07i54"
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the entry was made
          example: "2026-10-01T10:15:00Z"
        type:
          type: string
          description: Type of entry (e.g., answer, action, log)
          example: "answer"
        data:
          type: object
          description: Entry-specific data (e.g., answer details, action performed)
          additionalProperties: true

    ErrorEvent:
      description: A server-sent error event
      type: object
      required: [event, message]
      properties:
        event:
          type: string
          enum: [error]
        message:
          type: string
          description: Description of the error

# Start of description
security:
  - bearerAuth: []

paths:
  /examinations/otp:
    post:
      tags:
        - OneTimePassword
      summary: Create several one-time passwords
      operationId: createOtp
      description:
        Generate one or more one-time passwords for accessing a specific examination
        A one-time password (otp) can be used to access a examination content or to perform actions related to it.
        Each OTP is associated with a specific content and subject (user).
        The content is identified by a content_id and normally is unique for each examination and profession.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/OtpRequestItem"

      responses:
        "201":
          description: OTP successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OneTimePassword"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: examination not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /examinations/status:
    post:
      tags:
        - HandleState
      summary: Get current examination status
      description:
        Retrieve the current status of one or more examinations identified by their OTP IDs.
        post is used to retrieve the status of multiple examinations at once.
      operationId: getExaminationStatus
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: List of otp_id for which to retrieve the status
                example: ["123456789012345678", "234567890123456789"]
      responses:
        "200":
          description: Status retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OtpStatus"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: examination not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /examinations/lockstate/{lock_state}:
    put:
      tags:
        - HandleState
      summary: Handle locks and suspensions of examinations
      description:
        "lock or unlock a list of examinations to prohibit the usage by the participants.

        if the OtpState of the examination isn't started yet, the OtpState will be set to **runnable**,
        if lock_state is 'unlock' or **created** if lock_state is 'lock'.

        if the OtpState of the examination is already started, the OtpState will be set to **suspended**
        if lock_state is 'lock' or **running** if lock_state is 'unlock'."
      operationId: handleLocksExaminations
      parameters:
        - name: lock_state
          in: path
          required: true
          schema:
            type: string
            enum: [lock, unlock]
          description: "State to set for the examinations. Use 'lock' to lock and 'unlock' to unlock."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: List of otp_id for which should be locked or unlocked
                example: ["123456789012345678", "234567890123456789"]
      responses:
        "200":
          description: Status updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OtpStatus"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: examination not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /examinations/addtime:
    put:
      tags:
        - HandleState
      summary: Add additional time to examinations
      description: "Adds time a list of examinations.

        This endpoint allows to add additional time to the examinations identified by their OTP IDs.
        "
      operationId: addTime
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                $ref: "#/components/schemas/AddTimeRequest"
      responses:
        "200":
          description: Time addition successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OtpStatus"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: examination not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    # Monitoring during execution
  /monitoring/sse:
    post:
      tags:
        - ServerSentEvents
      summary: Subscribe for monitoring
      description:
        Subscribe for monitoring events. These events are sent as Server-Sent Events (SSE) stream.
        The client will receive a continuous stream of events related to the examination status.
        The client must provide a valid subscription_id to receive the events.
      operationId: subscribeForMonitoring
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - content_id
              properties:
                subscription_id:
                  type: string
                  format: uuid
                  description: Unique identifier for the subscription
                  example: "123e4567-e89b-12d3-a456-426614174002"
      responses:
        "200":
          description: Monitoring successfully registered
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/MonitoringStream"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /examinations/entries:
    post:
      tags:
        - ExecutionEntries
      summary: Get all entries made during completed executions
      description: Retrieve all entries (e.g., answers, actions, logs) made by participants during examination executions that are completed. Accepts a list of otp_id.
      operationId: getExecutionEntries
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              description: List of OTP IDs identifying the completed examination executions.
              example: ["4g7a07i54", "7h8b09j65"]
      responses:
        "200":
          description: Entries retrieved successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: "#/components/schemas/ExecutionEntry"
                description: Map of otp_id to list of entries
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Examination or entries not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
